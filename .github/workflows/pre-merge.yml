---
# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: Pre-Merge CI Pipeline

on:
  pull_request:
    branches:
      - main
      - release-*
  workflow_dispatch:

permissions:
  contents: read

jobs:
  pre-checks:
    runs-on: ${{ github.repository_owner == 'intel' && 'intel-ubuntu-latest' || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8   # v5.0.0
        with:
          persist-credentials: false
      - name: "Verify Branch Name"
        uses: open-edge-platform/orch-ci/verify-branch-name@e4fa54613527cfaad83ba8b625fd845a4ab8409d    # 0.1.53
  pre-merge-pipeline:
    needs: pre-checks
    if: ${{ needs.pre-checks.outputs.filtered_projects != '[]' }}
    strategy:
      fail-fast: false
    uses: open-edge-platform/orch-ci/.github/workflows/pre-merge.yml@e4fa54613527cfaad83ba8b625fd845a4ab8409d   # 0.1.53
    with:
      run_version_check: true
      run_dep_version_check: true
      run_build: true
      run_lint: true
      run_test: true
      run_validate_clean_folder: false
      run_docker_build: true
      run_artifact: false
      project_folder: ${{ matrix.project_folder }}
  final-check:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [pre-merge-pipeline]
    steps:
      - name: Final Status Check
        env:
          PRE_MERGE_PIPELINE_RESULT: ${{ needs.pre-merge-pipeline.result }}
        run: |
          echo "Pre-merge pipeline result: $PRE_MERGE_PIPELINE_RESULT"

          if [ "$PRE_MERGE_PIPELINE_RESULT" == "success" ] || [ "$PRE_MERGE_PIPELINE_RESULT" == "skipped" ]; then
            echo "Pre-merge check passed successfully."
          else
            echo "Pre-merge checks failed. PR can't get merged"
            exit 1
          fi
